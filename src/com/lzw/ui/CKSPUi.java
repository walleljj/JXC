/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lzw.ui;

import java.util.Iterator;
import java.util.List;

import javax.swing.JOptionPane;

import com.lzw.daoImpl.CustomerDaoImpl;
import com.lzw.daoImpl.GoodsDaoImpl;
import com.lzw.entity.Customer;
import com.lzw.entity.Goods;

/**
 *
 * @author 绘梦
 */
public class CKSPUi extends javax.swing.JFrame {

    /**
     * Creates new form CKSPUi
     */
	javax.swing.table.DefaultTableModel mode = null;
    public CKSPUi() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("商品信息");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "商品ID", "商品名", "品牌", "供应商", "尺寸", "款式", "颜色", "面料", "进价", "库存"
            }
        ));
        	mode = (javax.swing.table.DefaultTableModel)jTable1.getModel();
        
        while(mode.getRowCount()>0){
            mode.removeRow(mode.getRowCount()-1);//清除表数据
        }
        GoodsDaoImpl gdi = new GoodsDaoImpl();
        List li1 = null;
        li1 = gdi.findAllGoods();
        Iterator<Goods> it = li1.iterator();
        while(it.hasNext()){
            Goods gg = it.next();
            mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
        }
        
        
        
        jTable1.setAutoscrolls(false);
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel1.setText("商品信息");

        jLabel2.setText("查询条件：");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "商品名", "供应商", "尺寸", "款式", "颜色", "面料", " " }));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("有库存");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("没库存");

        jButton1.setText("确定");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String str = jTextField1.getText();
        String way = (String)jComboBox1.getSelectedItem();
        if(jRadioButton1.isSelected()){
        	switch(way){
        	case "商品名":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi = new GoodsDaoImpl();
                List li1 = null;
                li1 = gdi.findGoodsByName(str, 1);
                Iterator<Goods> it = li1.iterator();
                while(it.hasNext()){
                    Goods gg = it.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "供应商":
                while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi2 = new GoodsDaoImpl();
                List li12 = null;
                li12 = gdi2.findGoodsByGongying(str, 1);
                Iterator<Goods> it2 = li12.iterator();
                while(it2.hasNext()){
                    Goods gg = it2.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "尺寸":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi3 = new GoodsDaoImpl();
                List li13 = null;
                li13 = gdi3.findGoodsBySize(str, 1);
                Iterator<Goods> it3 = li13.iterator();
                while(it3.hasNext()){
                    Goods gg = it3.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "款式":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi4 = new GoodsDaoImpl();
                List li14 = null;
                li14 = gdi4.findGoodsByKuanshi(str, 1);
                Iterator<Goods> it4 = li14.iterator();
                while(it4.hasNext()){
                    Goods gg = it4.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "颜色":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi5 = new GoodsDaoImpl();
                List li15 = null;
                li15 = gdi5.findGoodsByColor(str, 1);
                Iterator<Goods> it5 = li15.iterator();
                while(it5.hasNext()){
                    Goods gg = it5.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "面料":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi6 = new GoodsDaoImpl();
                List li16 = null;
                li16 = gdi6.findGoodsByMianliao(str, 1);
                Iterator<Goods> it6 = li16.iterator();
                while(it6.hasNext()){
                    Goods gg = it6.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
        		break;
        	case " ":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
        		GoodsDaoImpl gdi7 = new GoodsDaoImpl();
                List li17 = null;
                li17 = gdi7.findAll(1);
                Iterator<Goods> it7 = li17.iterator();
                while(it7.hasNext()){
                    Goods gg = it7.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
        	}
        	
        	
        }else if(jRadioButton2.isSelected()){
        	switch(way){
        	case "商品名":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi = new GoodsDaoImpl();
                List li1 = null;
                li1 = gdi.findGoodsByName(str, 0);
                Iterator<Goods> it = li1.iterator();
                while(it.hasNext()){
                    Goods gg = it.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "供应商":
                while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi2 = new GoodsDaoImpl();
                List li12 = null;
                li12 = gdi2.findGoodsByGongying(str,0);
                Iterator<Goods> it2 = li12.iterator();
                while(it2.hasNext()){
                    Goods gg = it2.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "尺寸":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi3 = new GoodsDaoImpl();
                List li13 = null;
                li13 = gdi3.findGoodsBySize(str, 0);
                Iterator<Goods> it3 = li13.iterator();
                while(it3.hasNext()){
                    Goods gg = it3.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "款式":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi4 = new GoodsDaoImpl();
                List li14 = null;
                li14 = gdi4.findGoodsByKuanshi(str, 0);
                Iterator<Goods> it4 = li14.iterator();
                while(it4.hasNext()){
                    Goods gg = it4.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "颜色":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi5 = new GoodsDaoImpl();
                List li15 = null;
                li15 = gdi5.findGoodsByColor(str, 0);
                Iterator<Goods> it5 = li15.iterator();
                while(it5.hasNext()){
                    Goods gg = it5.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
                break;
        	case "面料":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
                GoodsDaoImpl gdi6 = new GoodsDaoImpl();
                List li16 = null;
                li16 = gdi6.findGoodsByMianliao(str, 0);
                Iterator<Goods> it6 = li16.iterator();
                while(it6.hasNext()){
                    Goods gg = it6.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
        		break;
        	case " ":
        		while(mode.getRowCount()>0){
                    mode.removeRow(mode.getRowCount()-1);//清除表数据
                }
        		GoodsDaoImpl gdi7 = new GoodsDaoImpl();
                List li17 = null;
                li17 = gdi7.findAll(0);
                Iterator<Goods> it7 = li17.iterator();
                while(it7.hasNext()){
                    Goods gg = it7.next();
                    mode.addRow(new Object[]{gg.getgId(),gg.getName(),gg.getPinpai(),gg.getGongying(),gg.getSize(),gg.getKuanshi(),gg.getColor(),gg.getMianlia(),gg.getJinjia(),gg.getKucun()});
                }
        	}
        	
        }else{
        	JOptionPane.showMessageDialog(null,"请选择条件！");
        	
        }
        	
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CKSPUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CKSPUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CKSPUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CKSPUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CKSPUi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
